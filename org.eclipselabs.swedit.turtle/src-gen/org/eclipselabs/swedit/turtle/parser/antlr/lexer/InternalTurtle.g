
/*
* generated by Xtext
*/
lexer grammar InternalTurtle;


@header {
package org.eclipselabs.swedit.turtle.parser.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}




KEYWORD_15 : '@'('P'|'p')('R'|'r')('E'|'e')('F'|'f')('I'|'i')('X'|'x');

KEYWORD_14 : '@'('B'|'b')('A'|'a')('S'|'s')('E'|'e');

KEYWORD_11 : '['']';

KEYWORD_12 : '^''^';

KEYWORD_13 : '_'':';

KEYWORD_1 : '(';

KEYWORD_2 : ')';

KEYWORD_3 : ',';

KEYWORD_4 : '.';

KEYWORD_5 : ':';

KEYWORD_6 : ';';

KEYWORD_7 : '@';

KEYWORD_8 : '[';

KEYWORD_9 : ']';

KEYWORD_10 : ('A'|'a');



RULE_IRI_TERMINAL : '<' ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9'|'/'|':'|'.'|'#'|'?'|'@'|'$'|'&'|'=')* '>';

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9'|'/'|'.'|'#'|'?')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



